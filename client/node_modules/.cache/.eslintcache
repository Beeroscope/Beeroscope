[{"C:\\Users\\kiann\\Beeroscope\\client\\src\\index.js":"1","C:\\Users\\kiann\\Beeroscope\\client\\src\\App.js":"2","C:\\Users\\kiann\\Beeroscope\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kiann\\Beeroscope\\client\\src\\Table.js":"4"},{"size":517,"mtime":1650328346045,"results":"5","hashOfConfig":"6"},{"size":4243,"mtime":1651737954760,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1650328346047,"results":"8","hashOfConfig":"6"},{"size":2533,"mtime":1650328346045,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yy3pbu",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\kiann\\Beeroscope\\client\\src\\index.js",[],[],"C:\\Users\\kiann\\Beeroscope\\client\\src\\App.js",["24"],[],"import React, { Component } from 'react';\r\n\r\n//get beer recommendation and update element\r\nasync function getBeer() {\r\n\tfetch('/api/beer/')\r\n\t.then(function(response) {\r\n\t\treturn response.text().then(function(text) {\r\n\t\t\tconst str = text.split(\",\\\"\");\r\n\t\t\tconst name = str[1].split(\":\")[1].replace(/\"/g,\"\");\r\n\t\t\tconst tagline = str[2].split(\":\")[1].replace(/\"/g,\"\");\r\n\t\t\tconst description = str[4].split(\":\\\"\")[1].replace(/\"/g,\"\");\r\n\t\t\t\r\n\t\t\tdocument.getElementById(\"beer info\").innerHTML = \"üç∫ Recommendation from BrewDog: \" + name + \"<br /><i>\"\r\n\t\t\t+ tagline + \"</i><br /><p>\" + description + \"</p>\";\r\n\t\t});\r\n\t});\r\n}\r\n\r\n//get horoscope and update element\r\nfunction getHoro(sign) {\r\n\tfetch('/api/horoscopes/' + sign)\r\n\t.then(function(response) {\r\n\t\treturn response.text().then(function(text) {\r\n\t\t\tconst str = text.split(\",\\\"\");\r\n\t\t\tconst daterange = str[0].split(\":\")[1].replace(/\"/g,\"\");\r\n\t\t\tconst currentdate = str[1].split(\":\")[1].replace(/\"/g,\"\");\r\n\t\t\tconst description = str[2].split(\":\")[1].replace(/\"/g,\"\");\r\n\t\t\t\r\n\t\t\tdocument.getElementById(\"horoscope\").innerHTML = \"<br /><p>\" + sign + \" (\" + daterange + \") horoscope for \" + currentdate\r\n\t\t\t+ \":<br /><br />\" + description + \"</p><br />\";\r\n\t\t});\r\n\t});\r\n}\r\n\t\r\nfunction getBeeroscope(sign) {\r\n\tgetBeer();\r\n\tgetHoro(sign);\r\n}\r\n\t\r\nclass Beeroscope extends Component {\r\n\tconstructor(props){\r\n        super(props);\r\n    }\r\n\t\r\n\tcomponentDidMount() {\r\n\r\n\t}\r\n\t\r\n\tcomponentDidUpdate() {\r\n\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n\t\t<div class=\"background-container\"></div>\r\n\t\t<img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1231630/moon2.png\" alt=\"\"></img>\r\n\t\t<div class=\"stars\"></div>\r\n\t\t<div class=\"twinkling\"></div>\r\n\t\t<div class=\"clouds\"></div>\r\n\t\t<center>\r\n\t\t<h1>Click your sign to get your daily Beeroscope!</h1>\r\n\t\t<table id = \"signs\">\r\n\t\t<tr>\r\n\t\t\t<td><div class = \"aries\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"ARIES\")}><img src=\"https://i.imgur.com/pa5dvx0.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"taurus\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"TAURUS\")}><img src=\"https://i.imgur.com/WYv5Lry.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"gemini\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"GEMINI\")}><img src=\"https://i.imgur.com/8Z59vyz.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"cancer\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"CANCER\")}><img src=\"https://i.imgur.com/qcHIjt8.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t</tr>\r\n\t\t\r\n\t\t<tr>\r\n\t\t\t<td><div class = \"leo\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"LEO\")}><img src=\"https://i.imgur.com/kJ8UqgI.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"virgo\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"VIRGO\")}><img src=\"https://i.imgur.com/JVxM4n2.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"libra\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"LIBRA\")}><img src=\"https://i.imgur.com/m0iPdYX.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"scorpio\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"SCORPIO\")}><img src=\"https://i.imgur.com/EMWFhol.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t</tr>\r\n\t\t\r\n\t\t<tr>\r\n\t\t\t<td><div class = \"sagittarius\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"SAGITTARIUS\")}><img src=\"https://i.imgur.com/dpfXFkU.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"capricorn\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"CAPRICORN\")}><img src=\"https://i.imgur.com/sbmrFRE.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"aquarius\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"AQUARIUS\")}><img src=\"https://i.imgur.com/EFICzQR.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t\t<td><div class = \"pisces\">\r\n\t\t\t\t<button onClick={() => getBeeroscope(\"PISCES\")}><img src=\"https://i.imgur.com/bGqurNc.png\" width=\"100\" height=\"100\"></img></button>\r\n\t\t\t</div></td>\r\n\t\t</tr></table>\r\n\t\t    <div id = \"horoscope\">\r\n\t\t\t</div>\r\n\t\t\t<div id = \"beer info\"><p>\r\n\t\t\t</p></div>\r\n\t\t\r\n\t\t</center>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Beeroscope;\r\n","C:\\Users\\kiann\\Beeroscope\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\kiann\\Beeroscope\\client\\src\\Table.js",["25"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom' \r\nimport './Table.css'\r\n\r\n// All console.log()s are simply for debugging\r\n// Table React Component. Used to create tables with headers from JSON data. Currently does NOT support elements with sub-arrays/nested arrays.\r\nexport default class Table extends React.Component {\r\n \r\n    constructor(props){\r\n    super(props);\r\n    this.getHeader = this.getHeader.bind(this);\r\n    this.getRowsData = this.getRowsData.bind(this);\r\n    this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    \r\n    // Gets the keys of the data, in this context it means to get the data categories. The keys we obtain are the first the which correspond to:\r\n    // 0: id, 1: beer name, 2: Beer's tagline\r\n    // An improvement would be to make this dynamic and dependent on user choice, there are about 30 other variables to choose from in the Punk API.\r\n    getKeys = function(){\r\n        console.log(this.props.data)\r\n        console.log(this.props.data[0])\r\n        return Object.keys(this.props.data[0]).slice(0, 3);\r\n    }\r\n    \r\n    // Get table headers using keys from the key-value pairs.\r\n    getHeader = function(){\r\n        var keys = this.getKeys();\r\n        console.log(\"~~~~~KEY LOGGING~~~~~~\")\r\n        return keys.map((key, index)=>{\r\n            \r\n            console.log(key);\r\n            return <th key={key}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n    \r\n    // Obtain data for the rows uses the RenderRow component for rendering the row.\r\n    getRowsData = function(){\r\n        var items = this.props.data;\r\n        var keys = this.getKeys();\r\n        console.log(\"~~~~~INDEX LOGGING~~~~~~\")\r\n        return items.map((row, index)=>{\r\n           \r\n            console.log(index);\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n    \r\n    // Returns the Table in HTML form.\r\n    render() {\r\n        return (\r\n            <div>\r\n            <table>\r\n            <thead>\r\n            <tr>{this.getHeader()}</tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.getRowsData()}\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n   }\r\n   // Returns the Row's data in TableData (td) entries. \r\n   const RenderRow = (props) =>{\r\n    console.log(\"~~~~ROW LOGGING~~~~\");\r\n    return props.keys.map((key, index)=>{\r\n        console.log(props.data[key])\r\n        console.log(key)\r\n        return <td key={props.data[key] + 25}><ul>{props.data[key]}</ul></td>\r\n    })\r\n   }",{"ruleId":null,"fatal":true,"severity":2,"message":"26","line":56,"column":2},{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":16},"Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>? (56:2)","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar"]