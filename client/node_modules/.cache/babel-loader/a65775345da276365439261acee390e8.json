{"ast":null,"code":"var _jsxFileName = \"K:\\\\BeeroscopeDev\\\\source_code\\\\Beeroscope\\\\client\\\\src\\\\Table.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Table.css'; // All console.log()s are simply for debugging\n// Table React Component. Used to create tables with headers from JSON data. Currently does NOT support elements with sub-arrays/nested arrays.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      var temp = Object.keys(this.props.data[0]); //  console.log(this.props.data[0])\n\n      var keys = Object.keys(this.props.data[0]).slice(0, 3); //  console.log(`Truth test: ${this.props.tags[0]} `);\n\n      if (this.props.tags[0]) {\n        keys.push(temp[6]);\n      }\n\n      if (this.props.tags[1]) {\n        keys.push(temp[7]);\n      }\n\n      if (this.props.tags[2]) {\n        keys.push(temp[5]);\n      }\n\n      if (this.props.tags[3]) {\n        keys.push(temp[13]);\n      }\n\n      if (this.props.tags[4]) {\n        keys.push(temp[3]);\n      }\n\n      return keys;\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys(); //  console.log(\"~~~~~KEY LOGGING~~~~~~\")\n\n      return keys.map((key, index) => {\n        var headtitle = key;\n        headtitle = headtitle.replace(/_+/g, ' '); //     console.log(headtitle);\n\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          children: headtitle.toUpperCase()\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      console.log(items);\n      var keys = this.getKeys(); //  console.log(\"~~~~~INDEX LOGGING~~~~~~\")\n\n      return items.map((row, index) => {\n        //      console.log(index);\n        //     console.log(items[index]);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => this.getDetailedData(items[index]),\n          children: /*#__PURE__*/_jsxDEV(RenderRow, {\n            data: row,\n            keys: keys\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 87\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.getFoodPairing = beer => {\n      var result = \"\";\n      var count = 0;\n      beer[\"food_pairing\"].map(index => {\n        if (count > 0) {\n          result += \", or \" + index;\n        } else {\n          count++;\n          result += index;\n        }\n      }); //   console.log(result);\n\n      return result;\n    };\n\n    this.getMethod = beer => {};\n\n    this.getMalts = malts => {\n      var result = \"Malts: \\n\";\n      malt.map((item, index) => {\n        if (index > 0) {\n          result += \"\\n-\" + item[\"amount\"][\"value\"] + \" \" + item[\"amount\"][\"units\"] + \" of \" + item[\"name\"];\n        }\n\n        result += \"\\t\" + item[\"amount\"][\"value\"] + \" \" + item[\"amount\"][\"units\"] + \" of \" + item[\"name\"];\n      });\n    };\n\n    this.getIngredients = beer => {\n      console.log(\"malt: \" + beer[\"ingredients\"][\"malt\"]);\n      console.log(\"Hops: \" + beer[\"ingredients\"][\"hops\"]);\n      console.log(\"Yeast: \" + beer[\"ingredients\"][\"yeast\"]);\n      var result = beer[\"ingredients\"][\"malt\"] + \"\\n Fermentation: \" + this.getMalts(beer[\"ingredients\"][\"malt\"]) + \"\\n Yeast: \" + beer[\"ingredients\"][\"yeast\"];\n    };\n\n    this.getDetailedData = function (beer) {\n      var parent = document.getElementById('Detail-section');\n      document.getElementById('title_header').hidden = false;\n      const desc_info = beer[\"description\"];\n      document.getElementById('description').innerHTML = \"Description: \" + desc_info;\n      const brewery_tips = beer[\"brewers_tips\"];\n      document.getElementById('brewerytips').innerHTML = \"Brewery tips: \" + brewery_tips;\n      const volume = \"Volume: \" + beer[\"volume\"][\"value\"] + \" \" + beer[\"volume\"][\"unit\"];\n      document.getElementById('volume').innerHTML = \"<br /><p>\" + volume + \"</p>\";\n      const ingredients = \"Ingredients: \\n \" + this.getIngredients(beer);\n      document.getElementById('ingredient-list').innerHTML = ingredients;\n      const method = this.getMethod(beer);\n      const food_pairing = this.getFoodPairing(beer);\n      document.getElementById('foodpair').innerHTML = \"<br /><p> Food Pairing: \" + food_pairing + \" </p>\";\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n    this.getDetailedData = this.getDetailedData.bind(this);\n    this.getFoodPairing = this.getFoodPairing.bind(this);\n    this.getMethod = this.getMethod.bind(this);\n    this.getIngredients = this.getIngredients.bind(this);\n  } // Gets the keys of the data, in this context it means to get the data categories. The keys we obtain are the first the which correspond to:\n  // 0: id, 1: beer name, 2: Beer's tagline\n  // An improvement would be to make this dynamic and dependent on user choice, there are about 30 other variables to choose from in the Punk API.\n\n\n  // Returns the Table in HTML form.\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"fl-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: this.getHeader()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.getRowsData()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Detail-section\",\n        style: {\n          color: \"#45f5f5\"\n        },\n        className: \"detailed\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"title_header\",\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#FFFF00\"\n            },\n            children: \"\\uD83C\\uDF7A Beer Report \\uD83C\\uDF7A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"beer_name\",\n          style: {\n            color: \"#FFFF00\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"beer_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"foodpair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"brewerytips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"ingredient-list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Returns the Row's data in TableData (td) entries. \n\nconst RenderRow = props => {\n  // console.log(\"~~~~ROW LOGGING~~~~\");\n  return props.keys.map((key, index) => {\n    //   console.log(\"index: \" + index);\n    //   console.log(props.data[key])\n    //   console.log(key)\n    if (key === \"image_url\") {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.data[key],\n          className: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 51\n        }, this)\n      }, props.data[key] + 25, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 20\n      }, this);\n    } else if (key === \"name\") {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: props.data[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 51\n        }, this)\n      }, props.data[key] + 25, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.data[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 47\n      }, this)\n    }, props.data[key] + 25, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 16\n    }, this);\n  });\n};\n\n_c = RenderRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderRow\");","map":{"version":3,"sources":["K:/BeeroscopeDev/source_code/Beeroscope/client/src/Table.js"],"names":["React","ReactDOM","Table","Component","constructor","props","getKeys","temp","Object","keys","data","slice","tags","push","getHeader","map","key","index","headtitle","replace","toUpperCase","getRowsData","items","console","log","row","getDetailedData","getFoodPairing","beer","result","count","getMethod","getMalts","malts","malt","item","getIngredients","parent","document","getElementById","hidden","desc_info","innerHTML","brewery_tips","volume","ingredients","method","food_pairing","bind","render","color","RenderRow"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom' \r\nimport './Table.css'\r\n\r\n// All console.log()s are simply for debugging\r\n// Table React Component. Used to create tables with headers from JSON data. Currently does NOT support elements with sub-arrays/nested arrays.\r\nexport default class Table extends React.Component {\r\n \r\n    constructor(props){\r\n    super(props);\r\n    this.getHeader = this.getHeader.bind(this);\r\n    this.getRowsData = this.getRowsData.bind(this);\r\n    this.getKeys = this.getKeys.bind(this);\r\n    this.getDetailedData = this.getDetailedData.bind(this);\r\n    this.getFoodPairing = this.getFoodPairing.bind(this);\r\n    this.getMethod = this.getMethod.bind(this);\r\n    this.getIngredients = this.getIngredients.bind(this);\r\n    }\r\n    \r\n    // Gets the keys of the data, in this context it means to get the data categories. The keys we obtain are the first the which correspond to:\r\n    // 0: id, 1: beer name, 2: Beer's tagline\r\n    // An improvement would be to make this dynamic and dependent on user choice, there are about 30 other variables to choose from in the Punk API.\r\n    getKeys = function(){\r\n        var temp = Object.keys(this.props.data[0]);\r\n      //  console.log(this.props.data[0])\r\n        var keys = Object.keys(this.props.data[0]).slice(0, 3);\r\n      //  console.log(`Truth test: ${this.props.tags[0]} `);\r\n        if(this.props.tags[0]) {\r\n            keys.push(temp[6])\r\n        }\r\n        if(this.props.tags[1]) {\r\n            keys.push(temp[7])\r\n        }\r\n        if(this.props.tags[2]) {\r\n            keys.push(temp[5])\r\n        }\r\n        if(this.props.tags[3]) {\r\n            keys.push(temp[13])\r\n        }\r\n        if(this.props.tags[4]) {\r\n            keys.push(temp[3])\r\n        }\r\n        return keys;\r\n    }\r\n    \r\n    // Get table headers using keys from the key-value pairs.\r\n    getHeader = function(){\r\n        var keys = this.getKeys();\r\n      //  console.log(\"~~~~~KEY LOGGING~~~~~~\")\r\n        return keys.map((key, index)=>{\r\n            var headtitle = key;\r\n            headtitle = headtitle.replace(/_+/g, ' ');\r\n       //     console.log(headtitle);\r\n            return <th key={key}>{headtitle.toUpperCase()}</th>\r\n        })\r\n    }\r\n    \r\n    // Obtain data for the rows uses the RenderRow component for rendering the row.\r\n    getRowsData = function(){\r\n        var items = this.props.data;\r\n        console.log(items);\r\n        var keys = this.getKeys();\r\n      //  console.log(\"~~~~~INDEX LOGGING~~~~~~\")\r\n        return items.map((row, index)=>{\r\n           \r\n       //      console.log(index);\r\n       //     console.log(items[index]);\r\n            return <tr key={index} onClick={() => this.getDetailedData(items[index])}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n    }\r\n\r\n    getFoodPairing = (beer) => {\r\n        var result = \"\";\r\n        var count = 0\r\n        beer[\"food_pairing\"].map((index) => {\r\n            if(count > 0) {\r\n                result += \", or \" + index;\r\n            }\r\n            else{ \r\n                count++;\r\n                result += index; \r\n            }\r\n        });\r\n     //   console.log(result);\r\n        return result;\r\n    }\r\n\r\n    getMethod = (beer) => {\r\n\r\n    }\r\n\r\n    getMalts = (malts) => {\r\n        var result = \"Malts: \\n\";\r\n        malt.map((item, index) => {\r\n            if(index > 0) {\r\n                result += \"\\n-\" + item[\"amount\"][\"value\"] + \" \" + item[\"amount\"][\"units\"] + \" of \" + item[\"name\"];\r\n            }\r\n            result += \"\\t\" + item[\"amount\"][\"value\"] + \" \" + item[\"amount\"][\"units\"] + \" of \" + item[\"name\"];\r\n        })\r\n    }\r\n\r\n    getIngredients = (beer) => {\r\n        console.log(\"malt: \" + beer[\"ingredients\"][\"malt\"]);\r\n        console.log(\"Hops: \" + beer[\"ingredients\"][\"hops\"]);\r\n        console.log(\"Yeast: \" + beer[\"ingredients\"][\"yeast\"])\r\n        var result = beer[\"ingredients\"][\"malt\"] + \"\\n Fermentation: \" + this.getMalts(beer[\"ingredients\"][\"malt\"]) + \"\\n Yeast: \" + beer[\"ingredients\"][\"yeast\"];\r\n    }\r\n\r\n    getDetailedData = function(beer){\r\n        var parent =  document.getElementById('Detail-section');\r\n        document.getElementById('title_header').hidden = false;\r\n\r\n        const desc_info = beer[\"description\"];\r\n        document.getElementById('description').innerHTML = \"Description: \" + desc_info;\r\n\r\n        \r\n        const brewery_tips = beer[\"brewers_tips\"];\r\n        document.getElementById('brewerytips').innerHTML = \"Brewery tips: \" + brewery_tips;\r\n\r\n        const volume = \"Volume: \" +  beer[\"volume\"][\"value\"] + \" \" + beer[\"volume\"][\"unit\"];\r\n        document.getElementById('volume').innerHTML = \"<br /><p>\" + volume + \"</p>\";\r\n\r\n        const ingredients = \"Ingredients: \\n \" + this.getIngredients(beer);\r\n        document.getElementById('ingredient-list').innerHTML = ingredients;\r\n\r\n        const method = this.getMethod(beer);\r\n\r\n        const food_pairing = this.getFoodPairing(beer);\r\n        document.getElementById('foodpair').innerHTML = \"<br /><p> Food Pairing: \" + food_pairing + \" </p>\";\r\n    }\r\n\r\n    \r\n    // Returns the Table in HTML form.\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-wrapper\">\r\n                    <table className=\"fl-table\">\r\n                    <thead>\r\n                    <tr>{this.getHeader()}</tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.getRowsData()}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                <div id='Detail-section' style={{color : \"#45f5f5\"}} className=\"detailed\">\r\n                        <h1 id='title_header' hidden={true}><p style={{color : \"#FFFF00\"}}>🍺 Beer Report 🍺</p></h1>\r\n                        <h2 id='beer_name' style={{color : \"#FFFF00\"}}></h2>\r\n                        <div id='beer_image'></div>\r\n                        <p id=\"description\"></p>\r\n                        <p id=\"foodpair\"></p>\r\n                        <p id=\"brewerytips\"></p>\r\n                        <p id=\"ingredient-list\"></p>\r\n                        <div id='volume'></div>\r\n                    </div>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n   }\r\n   // Returns the Row's data in TableData (td) entries. \r\n   const RenderRow = (props) =>{\r\n   // console.log(\"~~~~ROW LOGGING~~~~\");\r\n    return props.keys.map((key, index)=>{\r\n     //   console.log(\"index: \" + index);\r\n     //   console.log(props.data[key])\r\n     //   console.log(key)\r\n        if(key === \"image_url\") {\r\n            \r\n            return <td key={props.data[key] + 25}><img src={props.data[key]} className=\"photo\"/></td>\r\n        }\r\n        else if(key === \"name\") {\r\n            return <td key={props.data[key] + 25}><ul>{props.data[key]}</ul></td>\r\n        }\r\n        return <td key={props.data[key] + 25}><ul>{props.data[key]}</ul></td>\r\n    })\r\n   }"]},"metadata":{},"sourceType":"module"}