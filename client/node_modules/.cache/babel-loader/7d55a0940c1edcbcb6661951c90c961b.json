{"ast":null,"code":"var _jsxFileName = \"K:\\\\BeeroscopeDev\\\\source_code\\\\linking\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [word, setWord] = React.useState('software');\n  const [associations, setAssociations] = React.useState(null);\n\n  const getAssociations = () => {\n    fetch('/api/associations/' + word).then(result => result.json()).then(body => setAssociations(body));\n    console.log(Object.keys(associations).length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Associations Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: word,\n      onChange: e => setWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAssociations,\n      children: \"Find Associations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), associations && (Object.keys(associations).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(associations).map(_ref => {\n        let [association, score] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: Math.pow(score, 2) / 200\n            },\n            children: [association, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, association, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"P9YRlWmARPQX7o6NiH6gu20s434=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["K:/BeeroscopeDev/source_code/linking/client/src/App.js"],"names":["logo","React","ReactDOM","App","word","setWord","useState","associations","setAssociations","getAssociations","fetch","then","result","json","body","console","log","Object","keys","length","e","target","value","entries","map","association","score","fontSize","Math","pow"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,UAAf,CAAxB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACK,QAAN,CAAe,IAAf,CAAxC;;AACA,QAAMG,eAAe,GAAG,MAAM;AAC5BC,IAAAA,KAAK,CAAC,uBAAuBN,IAAxB,CAAL,CACGO,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQG,IAAI,IAAIN,eAAe,CAACM,IAAD,CAF/B;AAGEC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYX,YAAZ,EAA0BY,MAAtC;AACH,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,KAAK,EAAEf,IAAd;AAAoB,MAAA,QAAQ,EAAEgB,CAAC,IAAIf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEb,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,YAAY,KACXU,MAAM,CAACC,IAAP,CAAYX,YAAZ,EAA0BY,MAA1B,KAAqC,CAArC,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI;AAAA,gBACCF,MAAM,CAACM,OAAP,CAAehB,YAAf,EAA6BiB,GAA7B,CAAiC;AAAA,YAAC,CAACC,WAAD,EAAcC,KAAd,CAAD;AAAA,4BAChC;AAAA,iCACE;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL,CAASH,KAAT,EAAgB,CAAhB,IAAqB;AAAjC,aAAb;AAAA,uBACGD,WADH,EAEG,GAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUA,WAAV;AAAA;AAAA;AAAA;AAAA,gBADgC;AAAA,OAAjC;AADD;AAAA;AAAA;AAAA;AAAA,YAHO,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA/BQtB,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom' \n\nfunction App() {\n  const [word, setWord] = React.useState('software');\n  const [associations, setAssociations] = React.useState(null);\n  const getAssociations = () => {\n    fetch('/api/associations/' + word)\n      .then(result => result.json())\n      .then(body => setAssociations(body));\n      console.log(Object.keys(associations).length)\n  };\n    \n  return (\n    <div className=\"app\">\n      <h1>Word Associations Map</h1>\n      <input value={word} onChange={e => setWord(e.target.value)} />\n      <button onClick={getAssociations}>Find Associations</button>\n      {associations && (\n        Object.keys(associations).length === 0\n          ? <p>No results</p>\n          : <div>\n            {Object.entries(associations).map(([association, score]) => (\n              <li key ={association}>\n                <span style={{ fontSize: Math.pow(score, 2) / 200 }}>\n                  {association}\n                  {' '}\n                </span>\n              </li>\n            ))}\n          </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}