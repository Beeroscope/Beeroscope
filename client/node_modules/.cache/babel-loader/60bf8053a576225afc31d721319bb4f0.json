{"ast":null,"code":"var _jsxFileName = \"K:\\\\BeeroscopeDev\\\\source_code\\\\Beeroscope\\\\client\\\\src\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './Search.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TableComp from './Table';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [word, setWord] = React.useState('IPA');\n  const [associations, setAssociations] = React.useState(null);\n\n  const getAssociations = async () => {\n    const response = await fetch('/api/associations/' + word); // Proxy API call to server back-end.\n\n    const data = await response.json(); // Response should already be in json but convert it just in case.\n\n    await setAssociations(data); // assign the data to the associations variable.\n\n    await console.log(`Length is: ${data.length}`);\n    await console.log(`-----SAMPLE ELEMENT-----\\n${data[0]}`); // Debug info, can be found in browser's console.\n    // fetch('/api/associations/' + word)\n    //   .then(result => result.json())\n    //   .then(body => setAssociations(body));\n    // console.log(Object.keys(associations).length)\n  };\n\n  document.title = 'Beer Search'; // Rendered HTML\n  // Sets up a button that grabs whatever is in the search bar and calls the API caller with that data.\n  // Then, it creates a table using the returned data, or shows \"No results\" if nothing is returned.\n  // More info on how the table is set up can be found inside the Table Component. (Table.js)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HoroscopeLink\",\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        style: {\n          borderBottom: \"solid 1px\",\n          paddingBottom: \"1rem\",\n          paddingTop: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            variant: \"outlined\",\n            children: \"Get your Beeroscope!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: \"color:blue\",\n            children: \"Beer Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: word,\n          onChange: e => setWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getAssociations,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), associations && (Object.keys(associations).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TableComp, {\n          data: associations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, \"table list\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"2oV+HrpCcMad1WGN32T5g8tLeXA=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["K:/BeeroscopeDev/source_code/Beeroscope/client/src/Search.js"],"names":["logo","React","ReactDOM","TableComp","Link","Search","word","setWord","useState","associations","setAssociations","getAssociations","response","fetch","data","json","console","log","length","document","title","borderBottom","paddingBottom","paddingTop","e","target","value","Object","keys"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,YAAD,EAAgBC,eAAhB,IAAmCT,KAAK,CAACO,QAAN,CAAe,IAAf,CAAzC;;AACA,QAAMG,eAAe,GAAG,YAAY;AAClC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuBP,IAAxB,CAA5B,CADkC,CAC0B;;AAC5D,UAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAFkC,CAE0B;;AAC5D,UAAML,eAAe,CAACI,IAAD,CAArB,CAHkC,CAG0B;;AAC5D,UAAME,OAAO,CAACC,GAAR,CAAa,cAAaH,IAAI,CAACI,MAAO,EAAtC,CAAN;AACA,UAAMF,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAAC,CAAD,CAAI,EAAjD,CAAN,CALkC,CAK0B;AAC5D;AACA;AACA;AACA;AACD,GAVD;;AAYAK,EAAAA,QAAQ,CAACC,KAAT,GAAiB,aAAjB,CAfgB,CAgBhB;AACA;AACA;AACA;;AACA,sBACE;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAC,OAArC;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE,WADT;AAELC,UAAAA,aAAa,EAAE,MAFV;AAGLC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA,+BAOA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA,gCACA;AAAA,iCAAK;AAAG,YAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,KAAK,EAAEjB,IAAd;AAAoB,UAAA,QAAQ,EAAEkB,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAQ,UAAA,OAAO,EAAEf,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMGF,YAAY,KACXkB,MAAM,CAACC,IAAP,CAAYnB,YAAZ,EAA0BS,MAA1B,KAAqC,CAArC,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEI;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAET;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF,SAAU,YAAV;AAAA;AAAA;AAAA;AAAA,cAHO,CANf;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAvDQJ,M;;KAAAA,M;AAyDT,eAAeA,MAAf","sourcesContent":["import logo from './logo.svg';\r\nimport './Search.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom' \r\nimport TableComp from './Table';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Search() {\r\n  const [word, setWord] = React.useState('IPA');\r\n  const [associations,  setAssociations] = React.useState(null);\r\n  const getAssociations = async () => {\r\n    const response = await fetch('/api/associations/' + word);  // Proxy API call to server back-end.\r\n    const data = await response.json();                         // Response should already be in json but convert it just in case.\r\n    await setAssociations(data);                                // assign the data to the associations variable.\r\n    await console.log(`Length is: ${data.length}`);\r\n    await console.log(`-----SAMPLE ELEMENT-----\\n${data[0]}`);  // Debug info, can be found in browser's console.\r\n    // fetch('/api/associations/' + word)\r\n    //   .then(result => result.json())\r\n    //   .then(body => setAssociations(body));\r\n    // console.log(Object.keys(associations).length)\r\n  };\r\n    \r\n  document.title = 'Beer Search';\r\n  // Rendered HTML\r\n  // Sets up a button that grabs whatever is in the search bar and calls the API caller with that data.\r\n  // Then, it creates a table using the returned data, or shows \"No results\" if nothing is returned.\r\n  // More info on how the table is set up can be found inside the Table Component. (Table.js)\r\n  return (\r\n    <div>\r\n      \r\n      <div className=\"HoroscopeLink\" align=\"right\" >\r\n        <nav\r\n          style={{\r\n            borderBottom: \"solid 1px\",\r\n            paddingBottom: \"1rem\",\r\n            paddingTop: \"1rem\",\r\n          }}\r\n        >\r\n        <Link to=\"/\">\r\n          <button variant=\"outlined\">\r\n            Get your Beeroscope!\r\n          </button>\r\n        </Link>\r\n        </nav>\r\n      </div>\r\n      \r\n      <div className=\"search\">\r\n        <center>\r\n        <h1 ><p style=\"color:blue\">Beer Search</p></h1>\r\n        <input value={word} onChange={e => setWord(e.target.value)} />\r\n        <button onClick={getAssociations}>Search</button>\r\n        </center>\r\n        {associations && (\r\n          Object.keys(associations).length === 0\r\n            ? <p>No results</p>\r\n            : <div key={\"table list\"}>\r\n                <TableComp data={associations}/>\r\n              </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}