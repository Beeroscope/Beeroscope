{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/kiann/Beeroscope/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/kiann/Beeroscope/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\kiann\\\\Beeroscope\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import logo from'./logo.svg';import'./App.css';import React from'react';import ReactDOM from'react-dom';import TableComp from'./Table';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _React$useState=React.useState('IPA'),_React$useState2=_slicedToArray(_React$useState,2),word=_React$useState2[0],setWord=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),associations=_React$useState4[0],setAssociations=_React$useState4[1];var getAssociations=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/associations/\"+word);case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;_context.next=8;return setAssociations(data);case 8:_context.next=10;return console.log(\"Length is: \".concat(data.length));case 10:_context.next=12;return console.log(\"-----SAMPLE ELEMENT-----\\n\".concat(data[0]));case 12:case\"end\":return _context.stop();}}},_callee);}));return function getAssociations(){return _ref.apply(this,arguments);};}();// Rendered HTML\n// Sets up a button that grabs whatever is in the search bar and calls the API caller with that data.\n// Then, it creates a table using the returned data, or shows \"No results\" if nothing is returned.\n// More info on how the table is set up can be found inside the Table Component. (Table.js)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Beer Search!\"}),/*#__PURE__*/_jsx(\"input\",{value:word,onChange:function onChange(e){return setWord(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:getAssociations,children:\"Search\"}),associations&&(Object.keys(associations).length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No results\"}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TableComp,{data:associations})},\"table list\"))]});}export default App;","map":{"version":3,"sources":["C:/Users/kiann/Beeroscope/client/src/App.js"],"names":["logo","React","ReactDOM","TableComp","App","useState","word","setWord","associations","setAssociations","getAssociations","fetch","response","json","data","console","log","length","e","target","value","Object","keys"],"mappings":"8WAAA,MAAOA,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,SAAtB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,oBAAwBH,KAAK,CAACI,QAAN,CAAe,KAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAAyCN,KAAK,CAACI,QAAN,CAAe,IAAf,CAAzC,qDAAOG,YAAP,qBAAsBC,eAAtB,qBACA,GAAMC,CAAAA,eAAe,0FAAG,2KACCC,CAAAA,KAAK,CAAC,qBAAuBL,IAAxB,CADN,QAChBM,QADgB,qCAEHA,CAAAA,QAAQ,CAACC,IAAT,EAFG,QAEhBC,IAFgB,qCAGhBL,CAAAA,eAAe,CAACK,IAAD,CAHC,+BAIhBC,CAAAA,OAAO,CAACC,GAAR,sBAA0BF,IAAI,CAACG,MAA/B,EAJgB,gCAKhBF,CAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAAC,CAAD,CAA7C,EALgB,wDAAH,kBAAfJ,CAAAA,eAAe,0CAArB,CAQA;AACA;AACA;AACA;AACA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,oCADF,cAEE,cAAO,KAAK,CAAEJ,IAAd,CAAoB,QAAQ,CAAE,kBAAAY,CAAC,QAAIX,CAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,EAA/B,EAFF,cAGE,eAAQ,OAAO,CAAEV,eAAjB,oBAHF,CAIGF,YAAY,GACXa,MAAM,CAACC,IAAP,CAAYd,YAAZ,EAA0BS,MAA1B,GAAqC,CAArC,cACI,iCADJ,cAEI,kCACE,KAAC,SAAD,EAAW,IAAI,CAAET,YAAjB,EADF,EAAU,YAAV,CAHO,CAJf,GADF,CAcD,CAED,cAAeJ,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom' \r\nimport TableComp from './Table';\r\n\r\nfunction App() {\r\n  const [word, setWord] = React.useState('IPA');\r\n  const [associations,  setAssociations] = React.useState(null);\r\n  const getAssociations = async () => {\r\n    const response = await fetch(`/api/associations/` + word);  // Proxy API call to server back-end.\r\n    const data = await response.json();                         // Response should already be in json but convert it just in case.\r\n    await setAssociations(data);                                // assign the data to the associations variable.\r\n    await console.log(`Length is: ${data.length}`);\r\n    await console.log(`-----SAMPLE ELEMENT-----\\n${data[0]}`);  // Debug info, can be found in browser's console.\r\n  };\r\n    \r\n  // Rendered HTML\r\n  // Sets up a button that grabs whatever is in the search bar and calls the API caller with that data.\r\n  // Then, it creates a table using the returned data, or shows \"No results\" if nothing is returned.\r\n  // More info on how the table is set up can be found inside the Table Component. (Table.js)\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Beer Search!</h1>\r\n      <input value={word} onChange={e => setWord(e.target.value)} />\r\n      <button onClick={getAssociations}>Search</button>\r\n      {associations && (\r\n        Object.keys(associations).length === 0\r\n          ? <p>No results</p>\r\n          : <div key={\"table list\"}>\r\n              <TableComp data={associations}/>\r\n            </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}